import{l as u,m as i,o,p as k,f as s}from"./format-Ca1hgyLe.js";const w={lessThanXSeconds:{one:"kurang dari 1 detik",other:"kurang dari {{count}} detik"},xSeconds:{one:"1 detik",other:"{{count}} detik"},halfAMinute:"setengah menit",lessThanXMinutes:{one:"kurang dari 1 menit",other:"kurang dari {{count}} menit"},xMinutes:{one:"1 menit",other:"{{count}} menit"},aboutXHours:{one:"sekitar 1 jam",other:"sekitar {{count}} jam"},xHours:{one:"1 jam",other:"{{count}} jam"},xDays:{one:"1 hari",other:"{{count}} hari"},aboutXWeeks:{one:"sekitar 1 minggu",other:"sekitar {{count}} minggu"},xWeeks:{one:"1 minggu",other:"{{count}} minggu"},aboutXMonths:{one:"sekitar 1 bulan",other:"sekitar {{count}} bulan"},xMonths:{one:"1 bulan",other:"{{count}} bulan"},aboutXYears:{one:"sekitar 1 tahun",other:"sekitar {{count}} tahun"},xYears:{one:"1 tahun",other:"{{count}} tahun"},overXYears:{one:"lebih dari 1 tahun",other:"lebih dari {{count}} tahun"},almostXYears:{one:"hampir 1 tahun",other:"hampir {{count}} tahun"}},P=(a,e,n)=>{let t;const r=w[a];return typeof r=="string"?t=r:e===1?t=r.one:t=r.other.replace("{{count}}",e.toString()),n?.addSuffix?n.comparison&&n.comparison>0?"dalam waktu "+t:t+" yang lalu":t},v={full:"EEEE, d MMMM yyyy",long:"d MMMM yyyy",medium:"d MMM yyyy",short:"d/M/yyyy"},D={full:"HH.mm.ss",long:"HH.mm.ss",medium:"HH.mm",short:"HH.mm"},W={full:"{{date}} 'pukul' {{time}}",long:"{{date}} 'pukul' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},j={date:u({formats:v,defaultWidth:"full"}),time:u({formats:D,defaultWidth:"full"}),dateTime:u({formats:W,defaultWidth:"full"})},N={lastWeek:"eeee 'lalu pukul' p",yesterday:"'Kemarin pukul' p",today:"'Hari ini pukul' p",tomorrow:"'Besok pukul' p",nextWeek:"eeee 'pukul' p",other:"P"},S=(a,e,n,t)=>N[a],K={narrow:["SM","M"],abbreviated:["SM","M"],wide:["Sebelum Masehi","Masehi"]},F={narrow:["1","2","3","4"],abbreviated:["K1","K2","K3","K4"],wide:["Kuartal ke-1","Kuartal ke-2","Kuartal ke-3","Kuartal ke-4"]},A={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","Mei","Jun","Jul","Agt","Sep","Okt","Nov","Des"],wide:["Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"]},H={narrow:["M","S","S","R","K","J","S"],short:["Min","Sen","Sel","Rab","Kam","Jum","Sab"],abbreviated:["Min","Sen","Sel","Rab","Kam","Jum","Sab"],wide:["Minggu","Senin","Selasa","Rabu","Kamis","Jumat","Sabtu"]},J={narrow:{am:"AM",pm:"PM",midnight:"tengah malam",noon:"tengah hari",morning:"pagi",afternoon:"siang",evening:"sore",night:"malam"},abbreviated:{am:"AM",pm:"PM",midnight:"tengah malam",noon:"tengah hari",morning:"pagi",afternoon:"siang",evening:"sore",night:"malam"},wide:{am:"AM",pm:"PM",midnight:"tengah malam",noon:"tengah hari",morning:"pagi",afternoon:"siang",evening:"sore",night:"malam"}},T={narrow:{am:"AM",pm:"PM",midnight:"tengah malam",noon:"tengah hari",morning:"pagi",afternoon:"siang",evening:"sore",night:"malam"},abbreviated:{am:"AM",pm:"PM",midnight:"tengah malam",noon:"tengah hari",morning:"pagi",afternoon:"siang",evening:"sore",night:"malam"},wide:{am:"AM",pm:"PM",midnight:"tengah malam",noon:"tengah hari",morning:"pagi",afternoon:"siang",evening:"sore",night:"malam"}},x=(a,e)=>"ke-"+Number(a),E={ordinalNumber:x,era:i({values:K,defaultWidth:"wide"}),quarter:i({values:F,defaultWidth:"wide",argumentCallback:a=>a-1}),month:i({values:A,defaultWidth:"wide"}),day:i({values:H,defaultWidth:"wide"}),dayPeriod:i({values:J,defaultWidth:"wide",formattingValues:T,defaultFormattingWidth:"wide"})},L=/^ke-(\d+)?/i,V=/\d+/i,X={narrow:/^(sm|m)/i,abbreviated:/^(s\.?\s?m\.?|s\.?\s?e\.?\s?u\.?|m\.?|e\.?\s?u\.?)/i,wide:/^(sebelum masehi|sebelum era umum|masehi|era umum)/i},R={any:[/^s/i,/^(m|e)/i]},Y={narrow:/^[1234]/i,abbreviated:/^K-?\s[1234]/i,wide:/^Kuartal ke-?\s?[1234]/i},O={any:[/1/i,/2/i,/3/i,/4/i]},C={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|mei|jun|jul|agt|sep|okt|nov|des)/i,wide:/^(januari|februari|maret|april|mei|juni|juli|agustus|september|oktober|november|desember)/i},_={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^ma/i,/^ap/i,/^me/i,/^jun/i,/^jul/i,/^ag/i,/^s/i,/^o/i,/^n/i,/^d/i]},q={narrow:/^[srkjm]/i,short:/^(min|sen|sel|rab|kam|jum|sab)/i,abbreviated:/^(min|sen|sel|rab|kam|jum|sab)/i,wide:/^(minggu|senin|selasa|rabu|kamis|jumat|sabtu)/i},z={narrow:[/^m/i,/^s/i,/^s/i,/^r/i,/^k/i,/^j/i,/^s/i],any:[/^m/i,/^sen/i,/^sel/i,/^r/i,/^k/i,/^j/i,/^sa/i]},$={narrow:/^(a|p|tengah m|tengah h|(di(\swaktu)?) (pagi|siang|sore|malam))/i,any:/^([ap]\.?\s?m\.?|tengah malam|tengah hari|(di(\swaktu)?) (pagi|siang|sore|malam))/i},Q={any:{am:/^a/i,pm:/^pm/i,midnight:/^tengah m/i,noon:/^tengah h/i,morning:/pagi/i,afternoon:/siang/i,evening:/sore/i,night:/malam/i}},B={ordinalNumber:k({matchPattern:L,parsePattern:V,valueCallback:a=>parseInt(a,10)}),era:o({matchPatterns:X,defaultMatchWidth:"wide",parsePatterns:R,defaultParseWidth:"any"}),quarter:o({matchPatterns:Y,defaultMatchWidth:"wide",parsePatterns:O,defaultParseWidth:"any",valueCallback:a=>a+1}),month:o({matchPatterns:C,defaultMatchWidth:"wide",parsePatterns:_,defaultParseWidth:"any"}),day:o({matchPatterns:q,defaultMatchWidth:"wide",parsePatterns:z,defaultParseWidth:"any"}),dayPeriod:o({matchPatterns:$,defaultMatchWidth:"any",parsePatterns:Q,defaultParseWidth:"any"})},l={code:"id",formatDistance:P,formatLong:j,formatRelative:S,localize:E,match:B,options:{weekStartsOn:1,firstWeekContainsDate:1}},G=a=>{if(!a||a==="null"||a==="undefined")return"-";try{const e=m(String(a));return isNaN(e.getTime())?"-":s(e,"dd-MM-yyyy")}catch(e){return console.warn("Error formatting day month year:",a,e),"-"}},U=a=>{if(!a||a==="null"||a==="undefined")return"-";try{const e=m(String(a));return isNaN(e.getTime())?"-":s(e,"dd MMM yyyy",{locale:l})}catch(e){return console.warn("Error formatting date short month:",a,e),"-"}},Z=a=>{if(!a||a==="null"||a==="undefined")return"-";try{const e=m(String(a));return isNaN(e.getTime())?"-":s(e,"dd MMMM yyyy",{locale:l})}catch(e){return console.warn("Error formatting date:",a,e),"-"}},aa=a=>{if(!a||a==="null"||a==="undefined")return"-";try{const e=m(String(a));return isNaN(e.getTime())?"-":s(e,"dd MMMM yyyy HH:mm",{locale:l})}catch(e){return console.warn("Error formatting date with time:",a,e),"-"}};function ea(a){const e=a.getFullYear(),n=String(a.getMonth()+1).padStart(2,"0"),t=String(a.getDate()).padStart(2,"0");return`${e}-${n}-${t}`}function m(a){if(!a)return new Date;if(a.includes("T"))return new Date(a);const e=a.split(" ");if(e.length<2){const b=e[0],[p,y,M]=b.split("-").map(Number);return new Date(p,y-1,M,0,0,0)}const[n,t]=e,[r,d,h]=n.split("-").map(Number),[c,g,f]=t.split(":").map(Number);return new Date(r,d-1,h,c,g,f)}export{U as a,aa as b,G as c,Z as f,ea as t};
